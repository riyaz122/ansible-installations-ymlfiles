Adding more & more functionality to the playbooks will make it difficult to maintain in a single file
We can organize playbooks into a directory structure called roles
This is already possible by ‘include’ directives however Roles are automation around it

Ansible roles is a structured way of grouping tasks, handlers, vars and other properties. They increase reusability. 
You can easily share roles through Ansible Galaxy. 
Roles provide a framework for fully independent, or interdependent collections of variables, tasks, files, templates, and modules.

In Ansible, the role is the primary mechanism for breaking a playbook into multiple files. This simplifies writing complex playbooks,
and it makes them easier to reuse. The breaking of playbook allows you to logically break the playbook into reusable components.

Each role is basically limited to a particular functionality or desired output, with all the necessary steps to provide that result 
either within that role itself or in other roles listed as dependencies.

Roles are not playbooks. Roles are small functionality which can be independently used but have to be used within playbooks. 
There is no way to directly execute a role. Roles have no explicit setting for which host the role will apply to.

Top-level playbooks are the bridge holding the hosts from your inventory file to roles that should be applied to those hosts.

To create infrastructure easy way with the help of code.

placing the group of playbooks in one file

decrease complexity
increase reusability

ansible-galaxy init kiran

[ansible@ansibleserver ~]$ tree kiran
kiran
├── defaults          ## stores data about the roles/app default variables
│   └── main.yml
├── files             ## static files (.html,.php.....)
├── handlers          ## notifers task which are based on some action
│   └── main.yml
├── meta              ## it tells about the role like author or info about role, support platform
│   └── main.yml
├── README.md 
├── tasks             ##core logic or playbook
│   ├── java.yml
│   ├── jenkins.yml
│   └── main.yml
├── templates         ## dyanimic files
├── tests             ## 
│   ├── inventory
│   └── test.yml
└── vars              ## variables stored under vars has high priorty and difficult to override
    └── main.yml
